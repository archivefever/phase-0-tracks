// Javascript Array Sort
// input: array
// Set maxLength = 0
// Set longestWord = ""
// Use a for statement to iterate through the array
// For each index item
//  IF the string length is greater than maxLength, store the string at that index position as longest_word
// Return the variable longestWord
// output: string

function findLongestword(ary) {
  var maxLength = 0;
  var longestWord = "";

  for(var i=0; i < ary.length; i++){
    if(ary[i].length > maxLength){
      maxLength = ary[i].length;
      longestWord = ary[i];
    }
  }
  return longestWord;
}
testArray1 = ["long phrase","longest phrase","longer phrase"];
testArray2 = ["my", "name", "is", "clint", "hi"];

console.log(findLongestword(testArray1));
console.log(findLongestword(testArray2));

// RELEASE 1

// Write a function that takes two objects and checks to see if the objects share at least one key-value pair.

// yourFunction({name: "Steven", age: 54}, {name: "Tamir", age: 54}); #  true
// yourFunction({animal: "Dog", legs: 4}, {animal: "Dog", legs: 3}); #  true

// input: two objects
// Convert the keys of the object to an array with Object.keys
// Convert the values of the object an array with Object.values
// Declare a share_item variable and set it to false
// Iterate through the array of keys (using it's length as the limit in the for loop)
//    IF the key array of the first object (at that index) matches the key array of the second object at that index
//      THEN compare the value array at that index of the two objects in the same way
//        IF both matches are made, set the share_item variable to true
// Return the value of share_item
// output: boolean (true/false)

var example1 = {name: "Steven", age: 54};
var example2 = {name: "Tamir", age: 54};
var counterExample = {birthday: "may", smokes: false};


function keyValuematcher(control, test) {
  var shareItem = false;
  for (var i=0; i < Object.keys(control).length; i++) {
    if (Object.keys(control)[i] === Object.keys(test)[i]) {
      if (Object.values(control)[i] === Object.values(test)[i]) {
        shareItem = true;
      }
    }
  }
  return shareItem;
}

console.log(keyValuematcher(example1, counterExample));
console.log(keyValuematcher(example1, example2));

// RELEASE 2

// Write a function that takes an integer for length, and builds and returns an array of strings of the given length.
// input: an integer
// Declare an empty wordArray
// Write a loop that runs as many times as the integer and does the following:
//    Declare an empty string variable
//    Declare a string variable of the alphabet
//    Write a loop that performms the following function a number of times determined by the randomInteger function (between 1 and 10):
//        Generates a number between 0 and 25
//        Adds the character that corresponds to that index # in the alphabet string to the new string variable
//    Adds the new string to the wordArray
// Return the wordArray
// output: an array

// This randomInteger function that I found in the documentation takes a random float between 0 and 1 (generated by Math.random) and multiplies that float by the number of integers we're searching through -- for instance, 3 for randomINteger(1,3) which we get from (max-min+1). After adding 1 to that new value and rounding down to the next integer with Math.floor, the function generates a random integer.

function randomInteger(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

function randomWordgenerator(int) {
  var wordArray = [];

  for (i=0; i < int; i++) {
    var nonsenseWord = "";
    var alpha = "abcdefghijklmnopqrstuvwxyz";
    for (n=0; n < randomInteger(1, 10); n++) {
      nonsenseWord += alpha[randomInteger(0, 25)];
      }
    wordArray.push(nonsenseWord);
  }
  return wordArray;
}

// DRIVER CODE
for (x=0; x < 10; x++) {
  var randomArray = randomWordgenerator(6);
  console.log(randomArray);
  console.log(findLongestword(randomArray));
}